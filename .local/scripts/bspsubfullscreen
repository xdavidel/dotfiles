#!/usr/bin/env sh

HideBar() {
  polybar-msg cmd hide
}

ShowBar() {
  polybar-msg cmd show
}

HideNodes() {
  for node in $1; do
    bspc node "$node" -g hidden=on
  done
}

HideTiled() {
  Nodes=$(bspc query -N -n .tiled -d "$1")
  HideNodes "$Nodes"
}

ShowNodes() {
  Nodes=$(bspc query -N -n .hidden -d "$1")

  for node in $Nodes; do
    bspc node "$node" -g hidden=off
  done
}

bspc subscribe node_state | while read -r Event Monitor Desktop Node State Active
do
  # Hide bar and nodes when node becomes fullscreen, otherwise show
  if [ "$State" = "fullscreen" ] && [ "$Active" = "on" ]; then
    HideTiled "$Desktop" && HideBar
  else
    ShowNodes "$Desktop" && ShowBar
  fi
done &

bspc subscribe node_remove | while read -r Event Monitor Desktop Node
do
  # Show bar if no nodes are fullscreen on current desktop
  [ "$Monitor" = "$PrimaryMonitor" ] && \
	[ -z "$(bspc query -N -n .fullscreen -d "$Desktop")" ] && \
	ShowBar
  ShowNodes "$Desktop"
done &

bspc subscribe node_transfer | while read -r Event SrcMonitor SrcDesktop SrcNode DestMonitor Dest Desktop DestNode
do
  # Show nodes on src desktop and hide nodes on dest desktop
  # If src node is in full screen mode
  [ -n "$(bspc query -N -n "$SrcNode".fullscreen)" ] && \
	ShowNodes "$SrcDesktop" && HideTiled "$DestDesktop" && \
	ShowBar

  # Hide any fullscreen nodes on destination desktop
  FullscreenDest=$(bspc query -N -n .fullscreen -d "$DestDesktop" | sed "/$SrcNode/d")
  [ -n "$FullscreenDest" ] && HideNodes "$FullscreenDest"
done &

bspc subscribe desktop_focus | while read -r Event Monitor Desktop
do
  FullscreenNode="$(bspc query -N -n .fullscreen -d "$Desktop")"

  # Hide bar if desktop contains fullscreen node
  [ -n "$FullscreenNode" ] && HideBar || ShowBar
done &
