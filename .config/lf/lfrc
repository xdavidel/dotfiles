# Basic vars
set shell sh
set previewer ~/.local/scripts/preview
set shellopts '-eu'
set ifs "\n"
set scrolloff 10

# cmds/functions
cmd open ${{
    case $(file --mime-type $f -b) in
    	text/troff) man ./ $f;;
      text/*) $EDITOR $fx;;
			image/x-xcf|image/svg+xml) setsid gimp $f >/dev/null 2>&1 & ;;
			image/*) rotdir $f | setsid sxiv -ai >/dev/null 2>&1 & ;;
			audio/*) mpv --input-ipc-server=/tmp/mpvsoc$(date +%%s) $f ;;
			video/*) setsid mpv --input-ipc-server=/tmp/mpvsoc$(date +%%s) $f -quiet >/dev/null 2>&1 & ;;
			application/pdf) setsid zathura $fx >/dev/null 2>&1 & ;;
      *) for f in $fx; do setsid $OPENER $f >/dev/null 2>&1 & done;;
    esac
}}

cmd rename %[ -e $1 ] && printf "file exists" || mv $f $1

cmd delete ${{
	set -f
	printf "%s\n\t" "$fx"
	printf "delete?[y/n]"
	read ans
	[ $ans = "y" ] && rm -rf $fx
}}

cmd moveto ${{
	set -f
	clear; echo "Move to where?"
	dest="$(cut -d'	' -f2- ~/.config/directories | fzf)" &&
	eval mv -iv $fx $dest &&
	notify-send "ðŸšš File(s) moved." "File(s) moved to $dest."
}}

cmd copyto ${{
	set -f
	clear; echo "Copy to where?"
	dest="$(cut -d'	' -f2- ~/.config/directories | fzf)" &&
	eval cp -ivr $fx $dest &&
	notify-send "ðŸ“‹ File(s) copied." "File(s) copies to $dest."
}}

cmd fullpreview ${{
set -f
	case $(file --mime-type $f -b) in
		audio/*)					mediainfo "$f" | less ;;
		image/*)					drawimg "$f" ;;
		video/*)					CACHE=$(mktemp /tmp/thumb_cache.XXXXX)
												ffmpegthumbnailer -i "$f" -o $CACHE -s 0
												drawimg "$CACHE" && rm "$CACHE" ;;
		inode/*)					ls "$f/" | less ;;
		application/pdf)  pdftotext -l 10 -nopgbrk -q -- "$f" - | less;;
		text/html)				w3m -dump "$f" | less ;;
		text/*)						"$EDITOR" -R "$f" ;;
    *)								file --mime-type "$f" | less ;;
    esac
}}

cmd bulkrename ${{
	index=$(mktemp /tmp/lf-bulk-rename-index.XXXXXXXXXX)
	if [ -n "${fs}" ]; then
		echo "$fs" > $index
	else
		echo "$(ls "$(dirname $f)" | tr ' ' "\n")" > $index
	fi
	index_edit=$(mktemp /tmp/lf-bulk-rename.XXXXXXXXXX)
	cat $index > $index_edit
	$EDITOR $index_edit
	if [ $(cat $index | wc -l) -eq $(cat $index_edit | wc -l) ]; then
		max=$(($(cat $index | wc -l)+1))
		counter=1
		while [ $counter -le $max ]; do
			a="$(cat $index | sed "${counter}q;d")"
			b="$(cat $index_edit | sed "${counter}q;d")"
			counter=$(($counter+1))

			[ "$a" = "$b" ] && continue
			[ -e "$b" ] && echo "File exists: $b" && continue
			mv "$a" "$b"
		done
	else
		echo "Number of lines must stay the same"
	fi
	rm $index $index_edit
}}

# Bindings
map b bulkrename
map gh
map g top
map D delete
map C copyto
map M moveto
map a push %mkdir<space>
map r push :rename<space>
map <enter> shell
map R reload
map x $$f
map X !$f
map o &mimeopen $f
map O $mimeopen --ask $f
map v fullpreview
